<UserControl x:Class="Floyd_Warshall.View.UserControls.GraphCanvas"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Floyd_Warshall.View.UserControls"
             xmlns:vm="clr-namespace:Floyd_Warshall.ViewModel.GraphComponents"
             xmlns:Converters="clr-namespace:Floyd_Warshall.View.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <ItemsControl
            x:Name="canvas"
            Grid.Row="0"
            ItemsSource="{Binding Views}" 
            BorderBrush="Black"
            BorderThickness="1">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas
                        Background="LightBlue"
                        ClipToBounds="True"
                        AllowDrop="True"
                        Drop="Canvas_Drop"
                        MouseLeftButtonDown="Canvas_MouseLeftButtonUp" >
                    </Canvas>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.Resources>
                <DataTemplate DataType="{x:Type vm:VertexViewModel}" >
                    <local:Vertex 
                        X="{Binding CanvasX, Mode=TwoWay}" 
                        Y="{Binding CanvasY, Mode=TwoWay}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:UndirectedEdgeViewModel}">
                    <local:UndirectedEdge />
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:DirectedEdgeViewModel}">
                    <local:DirectedEdge />
                </DataTemplate>
            </ItemsControl.Resources>
            <ItemsControl.ItemContainerStyle>
                <Style>
                    <Setter Property="Canvas.Left" Value="{Binding CanvasX}" />
                    <Setter Property="Canvas.Top" Value="{Binding CanvasY}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Type}" Value="{x:Type vm:EdgeViewModelBase}">
                            <Setter Property="Panel.ZIndex" Value="1" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Type}" Value="{x:Type vm:VertexViewModel}">
                            <Setter Property="Panel.ZIndex" Value="2" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>
        <StatusBar Grid.Row="1">
            <StatusBarItem DockPanel.Dock="Left" Visibility="{Binding IsEdgeSelected, Converter={StaticResource BoolToVisibilityConverter}}">
                <TextBlock Text="Edge weight" />
            </StatusBarItem>
            <StatusBarItem DockPanel.Dock="Left"  Visibility="{Binding IsEdgeSelected, Converter={StaticResource BoolToVisibilityConverter}}">
                <TextBox
                    Width="45"
                    MaxLength="5"
                    Text="{Binding WeightText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding IsEdgeSelected}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding SubmitCommand}"/>
                    </TextBox.InputBindings>
                </TextBox>
            </StatusBarItem>
            <StatusBarItem DockPanel.Dock="Left"  Visibility="{Binding IsEdgeSelected, Converter={StaticResource BoolToVisibilityConverter}}">
                <Button
                    Content="Submit"
                    Padding="2,0" 
                    Command="{Binding SubmitCommand}">
                </Button>
            </StatusBarItem>
            <StatusBarItem DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="2,0" Visibility="{Binding HasInputError, Converter={StaticResource BoolToVisibilityConverter}}">
                <TextBlock Text="Numbers of up to 4-digits are allowed"/>
            </StatusBarItem>
            <Separator Width="1" DockPanel.Dock="Right" HorizontalAlignment="Right"  Visibility="{Binding MaxVertexCountReached, Converter={StaticResource BoolToVisibilityConverter}}"/>
            <StatusBarItem DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="2,0" Visibility="{Binding MaxVertexCountReached, Converter={StaticResource BoolToVisibilityConverter}}">
                <TextBlock Text="Maximum vertex count is reached"/>
            </StatusBarItem>
        </StatusBar>
        <Grid.Style>
            <Style TargetType="Grid">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding CanvasEnabled}" Value="True">
                        <Setter Property="Opacity" Value="1" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding CanvasEnabled}" Value="False">
                        <Setter Property="Opacity" Value="0.75" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
    </Grid>

</UserControl>
